package com.example.Restaurant.model;

    import jakarta.persistence.*;

    /**
     * The Food class represents a food item in the restaurant application.
     * This entity is mapped to the "food" table in the database.
     *
     * Relationships:
     * - None directly, but it can be referenced by other entities like CartItem.
     */
    @Entity
    public class Food {

        /**
         * The unique identifier for the food item.
         * This field is mapped to the "id" column in the "food" table.
         * It is auto-generated by the database.
         */
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        private Long id;

        /**
         * The name of the food item.
         * This field is mapped to the "name" column in the "food" table.
         * It is a required field.
         */
        private String name;

        /**
         * The description of the food item.
         * This field is mapped to the "description" column in the "food" table.
         * It uses the TEXT type in the database to allow for longer descriptions.
         */
        @Column(columnDefinition = "TEXT")
        private String description;

        /**
         * The price of the food item.
         * This field is mapped to the "price" column in the "food" table.
         * It represents the cost of the food item.
         */
        private Double price;

        /**
         * The URL of the image representing the food item.
         * This field is mapped to the "image" column in the "food" table.
         * It stores the path or URL to the image.
         */
        private String image;

        /**
         * The category of the food item (e.g., breakfast, lunch, dinner).
         * This field is mapped to the "category" column in the "food" table.
         * It helps in categorizing the food items.
         */
        private String category;

        /**
         * Gets the ID of the food item.
         *
         * @return the ID of the food item
         */
        public Long getId() {
            return id;
        }

        /**
         * Sets the ID of the food item.
         *
         * @param id the ID to set
         */
        public void setId(Long id) {
            this.id = id;
        }

        /**
         * Gets the name of the food item.
         *
         * @return the name of the food item
         */
        public String getName() {
            return name;
        }

        /**
         * Sets the name of the food item.
         *
         * @param name the name to set
         */
        public void setName(String name) {
            this.name = name;
        }

        /**
         * Gets the description of the food item.
         *
         * @return the description of the food item
         */
        public String getDescription() {
            return description;
        }

        /**
         * Sets the description of the food item.
         *
         * @param description the description to set
         */
        public void setDescription(String description) {
            this.description = description;
        }

        /**
         * Gets the price of the food item.
         *
         * @return the price of the food item
         */
        public Double getPrice() {
            return price;
        }

        /**
         * Sets the price of the food item.
         *
         * @param price the price to set
         */
        public void setPrice(Double price) {
            this.price = price;
        }

        /**
         * Gets the image URL of the food item.
         *
         * @return the image URL of the food item
         */
        public String getImage() {
            return image;
        }

        /**
         * Sets the image URL of the food item.
         *
         * @param image the image URL to set
         */
        public void setImage(String image) {
            this.image = image;
        }

        /**
         * Gets the category of the food item (e.g., breakfast, lunch, dinner).
         *
         * @return the category of the food item
         */
        public String getCategory() {
            return category;
        }

        /**
         * Sets the category of the food item (e.g., breakfast, lunch, dinner).
         *
         * @param category the category to set
         */
        public void setCategory(String category) {
            this.category = category;
        }
    }